server.port=8889

#as it is service it should get registered with registry
eureka.client.registerWithEureka=true
eureka.client.fetchRegistry=true
eureka.client.serviceUrl.defaultZone=http://serviceregistry:8761/eureka

spring.application.name=DEPARTMENT-SERVICE

#database connection details, using service name to connect
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://department-database:3306/department
spring.datasource.username=root
spring.datasource.password=root
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect

# Configuration for Kafka producer, a service can be a producer as well as consumer
spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.bootstrap-servers=kafka:29092

# Configuration for Kafka consumer
spring.kafka.consumer.key-deserializer = org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.value-deserializer = org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages='*'
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.listener.missing-topics-fatal=false
spring.kafka.consumer.bootstrap-servers=kafka:29092
